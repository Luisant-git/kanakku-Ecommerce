generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id    Int @id @default(autoincrement())
  email String @unique
  name  String?
  password String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  carts Cart[]
  orders Order[]
}

model Admin {
  id    Int @id @default(autoincrement())
  email String @unique
  name  String?
  password String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Product {
  id          Int   @id @default(autoincrement())
  name        String
  imageUrl    String[]
  description String?
  price      Float
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  cartItems   CartItem[]
  orderItems  OrderItem[]
}

model Cart {
  id        Int      @id @default(autoincrement())
  user      User?    @relation(fields: [userId], references: [id])
  userId    Int?
  items     CartItem[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model CartItem {
  id        Int      @id @default(autoincrement())
  cart      Cart     @relation(fields: [cartId], references: [id])
  cartId    Int
  product   Product  @relation(fields: [productId], references: [id])
  productId Int
  quantity  Int      @default(1)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Order {
  id        Int       @id  @default(autoincrement())
  userId    Int
  user      User      @relation(fields: [userId], references: [id])
  items     OrderItem[]
  subtotal  Float?
  tax       Float?
  total     Float
  status    OrderStatus @default(PENDING)
  shippingAddress String
  paymentMethod String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model OrderItem {
  id        Int      @id @default(autoincrement())
  order     Order    @relation(fields: [orderId], references: [id])
  orderId   Int
  product   Product  @relation(fields: [productId], references: [id])
  productId Int
  quantity  Int
  price     Float
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum OrderStatus {
  PENDING
  COMPLETED
  CANCELLED
}
